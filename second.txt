ABSTRACTION
abstract class ThreeDObject {
    protected double dim1, dim2, dim3;

    abstract double volume();
    abstract double wholeSurfaceArea();
}

// Box class
class Box extends ThreeDObject {
    public Box(double length, double width, double height) {
        dim1 = length;
        dim2 = width;
        dim3 = height;
    }

    double volume() {
        return dim1 * dim2 * dim3;
    }

    double wholeSurfaceArea() {
        return 2 * (dim1 * dim2 + dim2 * dim3 + dim3 * dim1);
    }
}

// Cube class
class Cube extends ThreeDObject {
    public Cube(double side) {
        dim1 = dim2 = dim3 = side;
    }

    double volume() {
        return dim1 * dim1 * dim1;
    }

    double wholeSurfaceArea() {
        return 6 * dim1 * dim1;
    }
}

// Cylinder class
class Cylinder extends ThreeDObject {
    public Cylinder(double radius, double height) {
        dim1 = radius;
        dim2 = height;
    }

    double volume() {
        return Math.PI * dim1 * dim1 * dim2;
    }

    double wholeSurfaceArea() {
        return 2 * Math.PI * dim1 * (dim1 + dim2);
    }
}

// Cone class
class Cone extends ThreeDObject {
    public Cone(double radius, double height) {
        dim1 = radius;
        dim2 = height;
    }

    double volume() {
        return (1.0 / 3) * Math.PI * dim1 * dim1 * dim2;
    }

    double wholeSurfaceArea() {
        double slantHeight = Math.sqrt(dim1 * dim1 + dim2 * dim2);
        return Math.PI * dim1 * (dim1 + slantHeight);
    }
}

// Main class
public class Main {
    public static void main(String[] args) {
        ThreeDObject box = new Box(2, 3, 4);
        ThreeDObject cube = new Cube(5);
        ThreeDObject cylinder = new Cylinder(3, 7);
        ThreeDObject cone = new Cone(3, 5);

        System.out.println("Box Volume: " + box.volume());
        System.out.println("Box Surface Area: " + box.wholeSurfaceArea());

        System.out.println("Cube Volume: " + cube.volume());
        System.out.println("Cube Surface Area: " + cube.wholeSurfaceArea());

        System.out.println("Cylinder Volume: " + cylinder.volume());
        System.out.println("Cylinder Surface Area: " + cylinder.wholeSurfaceArea());

        System.out.println("Cone Volume: " + cone.volume());
        System.out.println("Cone Surface Area: " + cone.wholeSurfaceArea());
    }
}

// ...............................................................................................................................

INTERFACE:
import java.util.Scanner;

// Interface Department
interface Department {
    String depName = "";
    String depHead = "";

    void getDepartmentData();
    void printDepartmentData();
}

// Hostel class
class Hostel {
    String hostelName;
    String hostelLocation;
    int noOfRooms;

    void getHostelData() {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter Hostel Name: ");
        hostelName = sc.nextLine();
        System.out.print("Enter Hostel Location: ");
        hostelLocation = sc.nextLine();
        System.out.print("Enter Number of Rooms: ");
        noOfRooms = sc.nextInt();
        sc.nextLine(); // consume leftover newline
    }

    void printHostelData() {
        System.out.println("Hostel Name: " + hostelName);
        System.out.println("Hostel Location: " + hostelLocation);
        System.out.println("Number of Rooms: " + noOfRooms);
    }
}

// Student class
class Student extends Hostel implements Department {
    String studentName;
    String regNo;
    String electiveSubject;
    double avgMarks;
    String depName;
    String depHead;

    public void getDepartmentData() {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter Department Name: ");
        depName = sc.nextLine();
        System.out.print("Enter Department Head: ");
        depHead = sc.nextLine();
    }

    public void printDepartmentData() {
        System.out.println("Department Name: " + depName);
        System.out.println("Department Head: " + depHead);
    }

    void getStudentData() {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter Student Name: ");
        studentName = sc.nextLine();
        System.out.print("Enter Registration Number: ");
        regNo = sc.nextLine();
        System.out.print("Enter Elective Subject: ");
        electiveSubject = sc.nextLine();
        System.out.print("Enter Average Marks: ");
        avgMarks = sc.nextDouble();
        sc.nextLine(); // consume leftover newline
    }

    void printStudentData() {
        System.out.println("Student Name: " + studentName);
        System.out.println("Registration Number: " + regNo);
        System.out.println("Elective Subject: " + electiveSubject);
        System.out.println("Average Marks: " + avgMarks);
    }
}

// Driver class
public class Main {
    public static void main(String[] args) {
        Student student = new Student();

        System.out.println("\n--- Enter Department Details ---");
        student.getDepartmentData();

        System.out.println("\n--- Enter Hostel Details ---");
        student.getHostelData();

        System.out.println("\n--- Enter Student Details ---");
        student.getStudentData();

        System.out.println("\n--- Displaying All Details ---");
        student.printDepartmentData();
        student.printHostelData();
        student.printStudentData();
    }
}

